apply plugin: "kotlin"
apply plugin: "groovy"

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-script-util:$kotlinVersion"
    compile "io.ktor:ktor-server-netty:$ktorVersion"
    compile "io.ktor:ktor-server-core:$ktorVersion"
    compile "io.ktor:ktor-auth:$ktorVersion"
    compile "io.ktor:ktor-jackson:$ktorVersion"
    compile "io.ktor:ktor-metrics:$ktorVersion"
    compile "io.ktor:ktor-client-apache:$ktorVersion"

    compile "ch.qos.logback:logback-classic:$logbackVersion"
    compile "org.apache.commons:commons-lang3:$commonsLang3Version"
    compile "org.elasticsearch.client:elasticsearch-rest-high-level-client:$elasticSearchVersion"

    testCompile "io.ktor:ktor-server-tests:$ktorVersion"
    testCompile "org.spockframework:spock-core:$spockVersion"
    testCompile "org.awaitility:awaitility:$awaitilityVersion"
    testCompile "org.awaitility:awaitility-groovy:$awaitilityVersion"
    testCompile "net.bytebuddy:byte-buddy:$byteBuddyVersion"
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}
compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

jar {
    manifest {
        attributes "Main-Class": "lit.fass.litfass.server.AppKt"
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task unitTest(type: Test) {
    useJUnit {
        includeCategories "lit.fass.litfass.server.helper.UnitTest"
    }
}
task integrationTest(type: Test) {
    useJUnit {
        includeCategories "lit.fass.litfass.server.helper.IntegrationTest"
    }
}
