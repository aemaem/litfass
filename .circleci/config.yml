version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk-node-browsers
      - image: postgres:11.1-alpine
        environment:
          POSTGRES_USER: "admin"
          POSTGRES_PASSWORD: "admin"
          POSTGRES_DB: litfass
      - image: elasticsearch:6.5.1
        environment:
          ES_JAVA_OPTS: "-Xmx256m -Xms256m"
          "discovery.type": "single-node"
    environment:
      TZ: "/usr/share/zoneinfo/Europe/Vienna"
      GRADLE_OPTS: '-Xmx128m -Dorg.gradle.jvmargs="-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - restore_cache:
          key: cache-{{ checksum "build.gradle" }}
      - run:
          name: "Prepare"
          command: mkdir -p build/circleci/test-results
      - run:
          name: "Build"
          command: ./gradlew assemble --stacktrace
      - run:
          name: "Unit test"
          command: ./gradlew unitTest --stacktrace
      - run:
          name: "Integration test"
          command: ./gradlew integrationTest --stacktrace
      - run:
          name: "Collect test results"
          when: always
          command: find . -type f -regex ".*/build/test-results/*Test/.*xml" -exec cp {} build/circleci/test-results \;
      - save_cache:
          paths:
            - ~/.gradle
          key: cache-{{ checksum "build.gradle" }}
      - store_test_results:
          path: build/circleci/test-results
  release:
    docker:
      - image: circleci/openjdk:8-jdk-node-browsers
      - image: postgres:11.1-alpine
        environment:
          POSTGRES_USER: "admin"
          POSTGRES_PASSWORD: "admin"
          POSTGRES_DB: litfass
      - image: elasticsearch:6.5.1
        environment:
          ES_JAVA_OPTS: "-Xmx256m -Xms256m"
          "discovery.type": "single-node"
      - image: docker:stable-git
    environment:
      TZ: "/usr/share/zoneinfo/Europe/Vienna"
      GRADLE_OPTS: '-Xmx128m -Dorg.gradle.jvmargs="-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: cache-{{ checksum "build.gradle" }}
      - run:
          name: "Build, release and publish"
          command: ./gradlew final -Prelease.useLastTag=true pushImage --stacktrace
      - save_cache:
          paths:
            - ~/.gradle
          key: cache-{{ checksum "build.gradle" }}

workflows:
  version: 2
  default:
    jobs:
      - build
      - release:
          context: docker-hub
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
